/*******************************************************************************
 * Copyright (c) 2012, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @file            Notification.cpp
 * @author          Jean-David Gadina - www.xs-labs.com
 * @copyright       (c) 2012, XS-Labs
 */

#include "Notification.h"

namespace EOS
{
    Notification::Notification()
    {}
    
    Notification::Notification( std::string & name )
    {
        this->_name = name;
    }
    
    Notification::Notification( std::string & name, Object & sender )
    {
        this->_name   = name;
        this->_sender = sender;
    }
    
    Notification::Notification( std::string & name, Object & sender, Notification::Infos & infos )
    {
        this->_name   = name;
        this->_sender = sender;
        this->_infos  = infos;
    }
    
    const std::string & Notification::name() const
    {
        return this->_name;
    }
    
    const Object & Notification::sender() const
    {
        return this->_sender;
    }
    
    const Notification::Infos & Notification::infos() const
    {
        return this->_infos;
    }
    
    void Notification::name( const std::string & name )
    {
        this->_name = name;
    }
    
    void Notification::sender( const Object & sender )
    {
        this->_sender = sender;
    }
    
    void Notification::infos( const Notification::Infos & infos )
    {
        this->_infos = infos;
    }
}

