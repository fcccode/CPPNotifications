/*******************************************************************************
 * Copyright (c) 2012, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header          Notification.h
 * @author          Jean-David Gadina - www.xs-labs.com
 * @copyright       (c) 2012, XS-Labs
 */

#ifndef EOS_NOTIFICATION_H
#define EOS_NOTIFICATION_H

#include <map>
#include "Object.h"

namespace EOS
{
    class Object;
    
    /*!
     * @class           EOS::Notification
     * @abstract        ...
     * @description     ...
     */
    class Notification: public Object
    {
        public:
            
            /*!
             * @typedef         EOS::Notification::Infos
             * @abstract        ...
             * @description     ...
             */
            typedef std::map< std::string, Object > Infos;
                    
            /*!
             * @method          EOS::Notification::Notification
             * @abstract        ...
             * @description     ...
             */
            Notification();
            
            /*!
             * @method          EOS::Notification::Notification
             * @abstract        ...
             * @description     ...
             */
            Notification( std::string & );
            
            /*!
             * @method          EOS::Notification::Notification
             * @abstract        ...
             * @description     ...
             */
            Notification( std::string &, Object & );
            
            /*!
             * @method          EOS::Notification::Notification
             * @abstract        ...
             * @description     ...
             */
            Notification( std::string &, Object &, Infos & );
            
            /*!
             * @method          EOS::Notification::name
             * @abstract        ...
             * @description     ...
             */
            const std::string & name() const;
            
            /*!
             * @method          EOS::Notification::sender
             * @abstract        ...
             * @description     ...
             */
            const Object & sender() const;
            
            /*!
             * @method          EOS::Notification::infos
             * @abstract        ...
             * @description     ...
             */
            const Infos & infos() const;
            
            /*!
             * @method          EOS::Notification::name
             * @abstract        ...
             * @description     ...
             */
            void name( const std::string & );
            
            /*!
             * @method          EOS::Notification::sender
             * @abstract        ...
             * @description     ...
             */
            void sender( const Object & );
            
            /*!
             * @method          EOS::Notification::infos
             * @abstract        ...
             * @description     ...
             */
            void infos( const Infos & );
            
        protected:
            
            /*!
             * @var             EOS::Notification::_name
             * @abstract        ...
             * @description     ...
             */
            std::string         _name;
            
            /*!
             * @var             EOS::Notification::_sender
             * @abstract        ...
             * @description     ...
             */
            Object              _sender;
            
            /*!
             * @var             EOS::Notification::_infos
             * @abstract        ...
             * @description     ...
             */
            Infos   _infos;
    };
}

#endif /* EOS_NOTIFICATION_H */
